<?php

namespace AkademiaBundle\Repository;

/**
 * DepartamentoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DepartamentoRepository extends \Doctrine\ORM\EntityRepository
{

	public function departamentosFlagAll($flagDis){

        $query = " SELECT distinct ubidpto as idDepartamento from ACADEMIA.horario AS hor , CATASTRO.edificacionDisciplina as eddis,CATASTRO.edificacionesdeportivas AS edde, grubigeo as ubi where hor.discapacitados='$flagDis' and hor.estado=1
    			and hor.edi_codigo = eddis.edi_codigo and edde.ede_codigo = eddis.ede_codigo and ubi.ubicodigo = edde.ubicodigo
    			and ubidistrito != '00' AND ubidpto != '00' AND ubiprovincia != '00' and hor.vacantes <> 0 and hor.convocatoria = 1; ";
        $stmt = $this->getEntityManager()->getConnection()->prepare($query);
        $stmt->execute();
        $departamentos = $stmt->fetchAll();
        return $departamentos;
	
	}


    public function departamentosExport(){
        $query = "SELECT distinct ubiDpto.ubidpto idDepartamento
                    FROM ACADEMIA.inscribete AS ins
                    inner join (SELECT m.inscribete_id as mov_ins_id, MAX(m.id) mov_id FROM ACADEMIA.movimientos m
                    GROUP BY m.inscribete_id) ids ON ins.id = ids.mov_ins_id
                    inner join ACADEMIA.movimientos mov on mov.id = ids.mov_id 
                    inner join ACADEMIA.participante par on par.id = ins.participante_id
                    inner join ACADEMIA.apoderado apod on apod.id = par.apoderado_id
                    inner join grpersona grApod on grApod.percodigo = apod.percodigo

                    inner join ACADEMIA.horario hor on hor.id=ins.horario_id
                    inner join CATASTRO.edificacionDisciplina edi on edi.edi_codigo = hor.edi_codigo
                    inner join CATASTRO.edificacionesdeportivas ede on ede.ede_codigo = edi.ede_codigo

                    inner join grubigeo ubi on ubi.ubicodigo = ede.ubicodigo
                    inner join grubigeo ubiDpto on ubiDpto.ubidpto = ubi.ubidpto
                    
                    WHERE ubiDpto.ubidistrito=0 AND ubiDpto.ubiprovincia=0 AND ubiDpto.ubidpto!=0;";
        $stmt = $this->getEntityManager()->getConnection()->prepare($query);
        $stmt->execute();
        $departamentos = $stmt->fetchAll();
        return $departamentos;
    }

    public function departamentosExportFind($id){

        $query = " SELECT distinct ubiDpto.ubidpto idDepartamento
        FROM ACADEMIA.inscribete AS ins
        inner join (SELECT m.inscribete_id as mov_ins_id, MAX(m.id) mov_id FROM ACADEMIA.movimientos m
        GROUP BY m.inscribete_id) ids ON ins.id = ids.mov_ins_id
        inner join ACADEMIA.movimientos mov on mov.id = ids.mov_id 
        inner join ACADEMIA.participante par on par.id = ins.participante_id
        inner join ACADEMIA.apoderado apod on apod.id = par.apoderado_id
        inner join grpersona grApod on grApod.percodigo = apod.percodigo

        inner join ACADEMIA.horario hor on hor.id=ins.horario_id
        inner join CATASTRO.edificacionDisciplina edi on edi.edi_codigo = hor.edi_codigo
        inner join CATASTRO.edificacionesdeportivas ede on ede.ede_codigo = edi.ede_codigo

        inner join grubigeo ubi on ubi.ubicodigo = ede.ubicodigo
        inner join grubigeo ubiDpto on ubiDpto.ubidpto = ubi.ubidpto

        WHERE ubiDpto.ubidistrito=0 AND ubiDpto.ubiprovincia=0 AND ubiDpto.ubidpto!=0 AND ede.ede_codigo='$id' ";

        $stmt = $this->getEntityManager()->getConnection()->prepare($query);
        $stmt->execute();
        $departamentos = $stmt->fetchAll();
        return $departamentos;
    
    }



    public function departamentosExportFind2($id){

        $query = " SELECT distinct ubiDpto.ubidpto idDepartamento
        FROM 
            grubigeo ubiDpto 

        inner join CATASTRO.edificacionesdeportivas ede on ede.ubicodigo = ubiDpto.ubicodigo
        WHERE  ede.ede_codigo='$id' ";

        $stmt = $this->getEntityManager()->getConnection()->prepare($query);
        $stmt->execute();
        $departamentos = $stmt->fetchAll();
        return $departamentos;
    
    }

    public function departamentosPromotor($flagDis){
    
        $query = "SELECT distinct ubidpto as idDepartamento from ACADEMIA.horario AS hor , CATASTRO.edificacionDisciplina as eddis,CATASTRO.edificacionesdeportivas AS edde, grubigeo as ubi where hor.discapacitados='$flagDis' and hor.estado=1
            and hor.edi_codigo=eddis.edi_codigo and edde.ede_codigo=eddis.ede_codigo and ubi.ubicodigo=edde.ubicodigo
            and ubidistrito!='00' AND ubidpto!='00' AND ubiprovincia!='00' and hor.vacantes<>0";
        $stmt = $this->getEntityManager()->getConnection()->prepare($query);
        $stmt->execute();
        $departamentos = $stmt->fetchAll();
        return $departamentos;
    
    }

	public function departamentosAll(){

    $query = "SELECT ubidpto as id ,ubinombre as nombre from grubigeo where ubiprovincia='00' and ubidistrito='00' AND  ubidpto!='00';";
    $stmt = $this->getEntityManager()->getConnection()->prepare($query);
    $stmt->execute();
    $departamentos = $stmt->fetchAll();
    return $departamentos;
	
	}

}
