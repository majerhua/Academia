<?php

namespace AkademiaBundle\Repository;

/**
 * ComplejoDeportivoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ComplejoDeportivoRepository extends \Doctrine\ORM\EntityRepository
{


	public function getComplejoById($codigo){

		$query = "SELECT 
					ede.ede_codigo complejoId,
					ede.ede_nombre complejoNombre,
					ubi.ubidpto departamento,
					ubi.ubiprovincia provincia,
					ubi.ubidistrito distrito,
					ede.ede_asociado complejoTipo,
					ede_estado complejoEstado
					FROM CATASTRO.edificacionesdeportivas ede
					INNER JOIN grubigeo AS ubi ON ubi.ubicodigo = ede.ubicodigo
					WHERE
					ubi.ubidistrito <> '00' AND 
					ubi.ubiprovincia <> '00' AND 
					ubi.ubiprovincia <> '00' AND
					ede.ede_codigo = $codigo; ";

		$stmt = $this->getEntityManager()->getConnection()->prepare($query);
		$stmt->execute();
		$complejo = $stmt->fetchAll();
		return $complejo;
	}

	public function getComplejos(){

		$query = "SELECT 
					ede.ede_codigo complejoId,
					ede.ede_nombre complejoNombre,
					ubiDpto.ubinombre departamento,
					ubiProv.ubinombre provincia,
					ubi.ubinombre distrito,
					CASE ede.ede_asociado
					WHEN 1 THEN 'IPD'
					WHEN 2 THEN 'Asociado'
					WHEN 3 THEN 'No asociado'
					END
					AS complejoTipo,
					ede_estado complejoEstado
					 FROM CATASTRO.edificacionesdeportivas ede
					INNER JOIN grubigeo AS ubi ON ubi.ubicodigo = ede.ubicodigo
					INNER JOIN grubigeo AS ubiProv ON ubiProv.ubiprovincia = ubi.ubiprovincia
					INNER JOIN grubigeo AS ubiDpto ON ubiDpto.ubidpto = ubi.ubidpto
					WHERE
					ubiDpto.ubidpto <> '00' AND 
					ubiDpto.ubidistrito ='00' AND
					ubiDpto.ubiprovincia ='00' AND

					ubiProv.ubidpto = ubi.ubidpto AND
					ubiProv.ubidpto <> '00' AND
					ubiProv.ubiprovincia <> '00' AND
					ubiProv.ubidistrito = '00' AND

					ubi.ubidistrito <> '00' AND 
					ubi.ubiprovincia <> '00' AND 
					ubi.ubiprovincia <> '00';";

		$stmt = $this->getEntityManager()->getConnection()->prepare($query);
		$stmt->execute();
		$complejosDeportivos = $stmt->fetchAll();
		return $complejosDeportivos;
	}


	public function getComplexesPublicGeneralByDisability($disability,$ageBeneficiario,$idTemporada)
	{
		$query = "SELECT distinct edde.ede_codigo as id, edde.ede_nombre as nombre ,edde.ubicodigo ,edde.ede_direccion as direccion, edde.ede_estado as estado,edde.ede_discapacitado as discapacitado from ACADEMIA.horario AS hor , CATASTRO.edificacionDisciplina as eddis, CATASTRO.edificacionesdeportivas AS edde where hor.discapacitados='$disability' and hor.estado=1 and hor.edi_codigo=eddis.edi_codigo and edde.ede_codigo=eddis.ede_codigo and hor.vacantes <> 0 and hor.convocatoria=1 and hor.etapa = 1 and '$ageBeneficiario'<=hor.edadMaxima and '$ageBeneficiario'>=hor.edadMinima and eddis.temporada_id = $idTemporada;";

		$stmt = $this->getEntityManager()->getConnection()->prepare($query);
		$stmt->execute();
		$complejosDeportivos = $stmt->fetchAll();
		return $complejosDeportivos;
	}

	public function getComplexesPromotorByDisability($disability,$ageBeneficiario, $idTemporada)
	{
		$query = "SELECT distinct edde.ede_codigo AS id, edde.ede_nombre as nombre ,edde.ubicodigo ,edde.ede_direccion as direccion, edde.ede_estado as estado,edde.ede_discapacitado as discapacitado from ACADEMIA.horario AS hor , CATASTRO.edificacionDisciplina as eddis, CATASTRO.edificacionesdeportivas AS edde where hor.discapacitados='$disability' and hor.estado=1 and hor.edi_codigo=eddis.edi_codigo and edde.ede_codigo=eddis.ede_codigo and hor.vacantes<>0 and '$ageBeneficiario'<=hor.edadMaxima and '$ageBeneficiario'>=hor.edadMinima and eddis.temporada_id = $idTemporada;";

		$stmt = $this->getEntityManager()->getConnection()->prepare($query);
		$stmt->execute();
		$complejosDeportivos = $stmt->fetchAll();
		return $complejosDeportivos;
	}

	public function complejoDeportivoExport(){
       $query = "SELECT distinct ubiDpto.ubidpto idDepartamento ,ede.ede_codigo id, ede.ede_nombre nombre
    				FROM ACADEMIA.inscribete AS ins
    				inner join (SELECT m.inscribete_id as mov_ins_id, MAX(m.id) mov_id FROM ACADEMIA.movimientos m
				    GROUP BY m.inscribete_id) ids ON ins.id = ids.mov_ins_id
				    inner join ACADEMIA.movimientos mov on mov.id = ids.mov_id 
				    inner join ACADEMIA.participante par on par.id = ins.participante_id
				    inner join ACADEMIA.apoderado apod on apod.id = par.apoderado_id
				    inner join grpersona grApod on grApod.percodigo = apod.percodigo

					inner join ACADEMIA.horario hor on hor.id=ins.horario_id
					inner join CATASTRO.edificacionDisciplina edi on edi.edi_codigo = hor.edi_codigo
				    inner join CATASTRO.edificacionesdeportivas ede on ede.ede_codigo = edi.ede_codigo

				    inner join grubigeo ubi on ubi.ubicodigo = ede.ubicodigo
					inner join grubigeo ubiDpto on ubiDpto.ubidpto = ubi.ubidpto

					WHERE ubiDpto.ubidistrito=0 AND ubiDpto.ubiprovincia=0 AND ubiDpto.ubidpto!=0;";
				           $stmt = $this->getEntityManager()->getConnection()->prepare($query);
           $stmt->execute();
           $complejosDeportivos = $stmt->fetchAll();
           return $complejosDeportivos;		
	}

	public function getComplexesLandingByDisability($disability,$idTemporada)
	{
		$query = "  SELECT distinct 
							edde.ede_codigo AS id, 
							edde.ede_nombre AS nombre ,
							edde.ubicodigo ,
							edde.ede_direccion AS direccion, 
							edde.ede_estado AS estado,
							edde.ede_discapacitado AS discapacitado 

							FROM ACADEMIA.horario AS hor , 
								CATASTRO.edificacionDisciplina AS eddis,
								CATASTRO.edificacionesdeportivas AS edde

							WHERE 	hor.discapacitados = '$disability' AND 
									hor.estado = 1 AND 
									hor.vacantes <> 0 AND
									hor.convocatoria=1 AND
									hor.etapa = 1 AND
									hor.edi_codigo = eddis.edi_codigo AND 

									eddis.temporada_id = '$idTemporada' AND
									
									edde.ede_codigo=eddis.ede_codigo ;";
									

		$stmt = $this->getEntityManager()->getConnection()->prepare($query);
		$stmt->execute();
		$complejosDeportivos = $stmt->fetchAll();
		return $complejosDeportivos;
	}

	public function complejoDeportivoExportFind($id){
       $query = "SELECT distinct ubiDpto.ubidpto idDepartamento ,ede.ede_codigo id, ede.ede_nombre nombre
    				FROM ACADEMIA.inscribete AS ins
    				inner join (SELECT m.inscribete_id as mov_ins_id, MAX(m.id) mov_id FROM ACADEMIA.movimientos m
				    GROUP BY m.inscribete_id) ids ON ins.id = ids.mov_ins_id
				    inner join ACADEMIA.movimientos mov on mov.id = ids.mov_id 
				    inner join ACADEMIA.participante par on par.id = ins.participante_id
				    inner join ACADEMIA.apoderado apod on apod.id = par.apoderado_id
				    inner join grpersona grApod on grApod.percodigo = apod.percodigo

					inner join ACADEMIA.horario hor on hor.id=ins.horario_id
					inner join CATASTRO.edificacionDisciplina edi on edi.edi_codigo = hor.edi_codigo
				    inner join CATASTRO.edificacionesdeportivas ede on ede.ede_codigo = edi.ede_codigo

				    inner join grubigeo ubi on ubi.ubicodigo = ede.ubicodigo
					inner join grubigeo ubiDpto on ubiDpto.ubidpto = ubi.ubidpto
				    
					WHERE ubiDpto.ubidistrito=0 AND ubiDpto.ubiprovincia=0 AND ubiDpto.ubidpto!=0 AND ede.ede_codigo='$id' ";
           $stmt = $this->getEntityManager()->getConnection()->prepare($query);
           $stmt->execute();
           $complejosDeportivos = $stmt->fetchAll();
           return $complejosDeportivos;		
	}



	public function complejoDeportivoExportFind2($id){
       $query = " SELECT distinct ubiDpto.ubidpto idDepartamento, ede.ede_codigo id , ede.ede_nombre nombre
        FROM 
            grubigeo ubiDpto 

        inner join CATASTRO.edificacionesdeportivas ede on ede.ubicodigo = ubiDpto.ubicodigo
        WHERE  ede.ede_codigo='$id';";

           $stmt = $this->getEntityManager()->getConnection()->prepare($query);
           $stmt->execute();
           $complejosDeportivos = $stmt->fetchAll();
           return $complejosDeportivos;		
	}

	public function getComplejosDeportivos()
	{

       $query = "SELECT ede_codigo as id, ede_nombre as nombre ,ubicodigo , ede_direccion as direccion, ede_estado as estado, ede_discapacitado as discapacitado from CATASTRO.edificacionesdeportivas;";
        $stmt = $this->getEntityManager()->getConnection()->prepare($query);
        $stmt->execute();
        $complejosDeportivos = $stmt->fetchAll();

        return $complejosDeportivos;        		
	}

	public function getComplejosDeportivosDiscapacitados()
	{
		$query = "SELECT ede_codigo as id, ede_nombre as nombre ,ubicodigo, ede_direccion as direccion, ede_estado as estado,ede_discapacitado as discapacidad from CATASTRO.edificacionesdeportivas where ede_discapacitado='1'";

		$stmt = $this->getEntityManager()->getConnection()->prepare($query);
		$stmt->execute();
		$complejosDeportivos = $stmt->fetchAll();

		return $complejosDeportivos;
	}

		public function complejosDeportivosFlagAllLanding($flagDis)
	{
		$query = "SELECT distinct edde.ede_codigo as id, edde.ede_nombre as nombre ,edde.ubicodigo ,edde.ede_direccion as direccion, edde.ede_estado as estado,edde.ede_discapacitado as discapacitado from ACADEMIA.horario AS hor , CATASTRO.edificacionDisciplina as eddis, CATASTRO.edificacionesdeportivas AS edde where hor.discapacitados='$flagDis' and hor.estado=1 and hor.edi_codigo=eddis.edi_codigo and edde.ede_codigo=eddis.ede_codigo and hor.vacantes <> 0 and hor.convocatoria=1;";

		$stmt = $this->getEntityManager()->getConnection()->prepare($query);
		$stmt->execute();
		$complejosDeportivos = $stmt->fetchAll();
		return $complejosDeportivos;
	}



	public function getEditarDiscapacitado($idComplejo, $usuario){
	
		$query = "UPDATE catastro.edificacionesdeportivas set ede_discapacitado = 1, ede_usumodi = $usuario, ede_fechamodi = getDate() where ede_codigo= $idComplejo";
        $stmt = $this->getEntityManager()->getConnection()->prepare($query);
        $stmt->execute();
	
	}


	public function nombreComplejo($idComplejo){
		$query = "SELECT b.ede_nombre as nombreComplejo from academia.usuario a inner join catastro.edificacionesdeportivas b on a.id_complejo = b.ede_codigo where a.id_complejo = $idComplejo";
		
		$stmt = $this->getEntityManager()->getConnection()->prepare($query);
		$stmt->execute();
		$nombre = $stmt->fetchAll();

		return $nombre;
	}
}
